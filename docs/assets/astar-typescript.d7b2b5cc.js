import{l as O}from"./lodash.94525120.js";var A=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function W(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}var N={},u={},a={};Object.defineProperty(a,"__esModule",{value:!0});a.backtrace=void 0;function y(l,e,d){const r=[];let i;for(d?i=l:i=l.getParent();i.getParent();)r.push([i.position.x,i.position.y]),i=i.getParent();return e&&r.push([i.position.x,i.position.y]),r.reverse()}a.backtrace=y;var c={};Object.defineProperty(c,"__esModule",{value:!0});c.calculateHeuristic=void 0;function w(l,e,d,r){const i=Math.abs(d.x-e.x),t=Math.abs(d.y-e.y);switch(l){case"Manhatten":case"Manhattan":return(i+t)*r;case"Euclidean":return Math.sqrt(i*i+t*t)*r;case"Chebyshev":return Math.max(i,t)*r;case"Octile":return(i+t-.58*Math.min(i,t))*r}}c.calculateHeuristic=w;var o={},g={};Object.defineProperty(g,"__esModule",{value:!0});g.Node=void 0;class L{constructor(e){this.id=e.id,this.position=e.position,this.hValue=0,this.gValue=0,this.fValue=0,this.parentNode=void 0,this.isOnClosedList=!1,this.isOnOpenList=!1,this.isWalkable=e.walkable||!0}calculateFValue(){this.fValue=this.gValue+this.hValue}setGValue(e){this.gValue=e,this.calculateFValue()}setHValue(e){this.hValue=e,this.calculateFValue()}setFGHValuesToZero(){this.fValue=this.gValue=this.hValue=0}getFValue(){return this.fValue}getGValue(){return this.gValue}getHValue(){return this.hValue}getParent(){return this.parentNode}getIsOnClosedList(){return this.isOnClosedList}getIsOnOpenList(){return this.isOnOpenList}getIsWalkable(){return this.isWalkable}setParent(e){this.parentNode=e}setIsOnClosedList(e){this.isOnClosedList=e}setIsOnOpenList(e){this.isOnOpenList=e}setIsWalkable(e){this.isWalkable=e}}g.Node=L;Object.defineProperty(o,"__esModule",{value:!0});o.Grid=void 0;const p=g;class V{constructor(e){e.width&&e.height?(this.width=e.width,this.height=e.height,this.numberOfFields=this.width*this.height):e.matrix&&(this.width=e.matrix[0].length,this.height=e.matrix.length,this.numberOfFields=this.width*this.height),this.gridNodes=this.buildGridWithNodes(e.matrix||void 0,this.width,this.height,e.densityOfObstacles||0)}buildGridWithNodes(e,d,r,i){const t=[];let h=0;for(let n=0;n<r;n++){t[n]=[];for(let s=0;s<d;s++)t[n][s]=new p.Node({id:h,position:{x:s,y:n}}),h++}if(e===void 0){for(let n=0;n<r;n++)for(let s=0;s<d;s++)Math.floor(Math.random()*10)+1>10-i?t[n][s].setIsWalkable(!1):t[n][s].setIsWalkable(!0);return t}for(let n=0;n<r;n++)for(let s=0;s<d;s++)e[n][s]?t[n][s].setIsWalkable(!1):t[n][s].setIsWalkable(!0);return t}getNodeAt(e){return this.gridNodes[e.y][e.x]}isWalkableAt(e){return this.gridNodes[e.y][e.x].getIsWalkable()}isOnTheGrid(e){return e.x>=0&&e.x<this.width&&e.y>=0&&e.y<this.height}getSurroundingNodes(e,d){const r=[];for(var i=e.y-1;i<=e.y+1;i++)for(var t=e.x-1;t<=e.x+1;t++)if(this.isOnTheGrid({x:t,y:i}))if(this.isWalkableAt({x:t,y:i}))d?r.push(this.getNodeAt({x:t,y:i})):(t==e.x||i==e.y)&&r.push(this.getNodeAt({x:t,y:i}));else continue;else continue;return r}setGrid(e){this.gridNodes=e}resetGrid(){for(let e=0;e<this.gridNodes.length;e++)for(let d=0;d<this.gridNodes[e].length;d++)this.gridNodes[e][d].setIsOnClosedList(!1),this.gridNodes[e][d].setIsOnOpenList(!1),this.gridNodes[e][d].setParent(void 0),this.gridNodes[e][d].setFGHValuesToZero()}getGridNodes(){return this.gridNodes}clone(){const e=[];let d=0;for(let r=0;r<this.height;r++){e[r]=[];for(let i=0;i<this.width;i++)e[r][i]=new p.Node({id:d,position:{x:i,y:r},walkable:this.gridNodes[r][i].getIsWalkable()}),d++}return e}}o.Grid=V;Object.defineProperty(u,"__esModule",{value:!0});u.AStarFinder=void 0;const b=O.exports,G=a,v=c,k=o;class I{constructor(e){this.grid=new k.Grid({width:e.grid.width,height:e.grid.height,matrix:e.grid.matrix||void 0,densityOfObstacles:e.grid.densityOfObstacles||0}),this.closedList=[],this.openList=[],this.diagonalAllowed=e.diagonalAllowed!==void 0?e.diagonalAllowed:!0,this.heuristic=e.heuristic?e.heuristic:"Manhattan",this.includeStartNode=e.includeStartNode!==void 0?e.includeStartNode:!0,this.includeEndNode=e.includeEndNode!==void 0?e.includeEndNode:!0,this.weight=e.weight||1}findPath(e,d){this.closedList=[],this.openList=[],this.grid.resetGrid();const r=this.grid.getNodeAt(e),i=this.grid.getNodeAt(d);if(!this.grid.isWalkableAt(d)||!this.grid.isWalkableAt(e))return[];r.setIsOnOpenList(!0),this.openList.push(r);for(let t=0;t<this.grid.height;t++)for(let h=0;h<this.grid.width;h++){let n=this.grid.getNodeAt({x:h,y:t});this.grid.isWalkableAt({x:h,y:t})?n.setHValue(v.calculateHeuristic(this.heuristic,n.position,i.position,this.weight)):(n.setFGHValuesToZero(),n.setIsOnClosedList(!0),this.closedList.push(n))}for(;this.openList.length!==0;){const t=b.minBy(this.openList,n=>n.getFValue());if(t.setIsOnOpenList(!1),b.remove(this.openList,t),t.setIsOnClosedList(!0),this.closedList.push(t),t===i)return G.backtrace(i,this.includeStartNode,this.includeEndNode);const h=this.grid.getSurroundingNodes(t.position,this.diagonalAllowed);for(let n in h){const s=h[n];if(s.getIsOnClosedList())continue;const f=t.getGValue()+(s.position.x!==t.position.x||s.position.y==t.position.y?this.weight:this.weight*1.41421);(!s.getIsOnOpenList()||f<s.getGValue())&&(s.setGValue(f),s.setParent(t),s.getIsOnOpenList()?s.setParent(t):(s.setIsOnOpenList(!0),this.openList.push(s)))}}return[]}setHeuristic(e){this.heuristic=e}setWeight(e){this.weight=e}getGridClone(){return this.grid.clone()}getGrid(){return this.grid}}u.AStarFinder=I;(function(l){Object.defineProperty(l,"__esModule",{value:!0}),l.Grid=l.AStarFinder=void 0;var e=u;Object.defineProperty(l,"AStarFinder",{enumerable:!0,get:function(){return e.AStarFinder}});var d=o;Object.defineProperty(l,"Grid",{enumerable:!0,get:function(){return d.Grid}})})(N);export{N as a,A as c,W as g};
